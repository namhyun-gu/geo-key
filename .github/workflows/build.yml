name: Build
on:
  push:
    tags:
      - "*"

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.keystore.asc
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" --batch release.keystore.asc > app/release.keystore
          echo "${{ secrets.GOOGLE_SERVICES }}" > app/google-services.json.b64
          base64 -d app/google-services.json.b64 > app/google-services.json
          chmod +x gradlew
      # Run Build
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build release
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          NCP_CLIENT_ID: ${{ secrets.NCP_CLIENT_ID }}
          NCP_CLIENT_SECRET: ${{ secrets.NCP_CLIENT_SECRET }}
      # Run Publish
      - name: Set up Node.js
        uses: actions/setup-node@v2-beta
      - name: Install firebase-tools
        run: npm install -g firebase-tools
      - name: Upload release to Firebase App Distribution
        run: |
          firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
            --groups "Default" \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --token ${{ secrets.FIREBASE_TOKEN }} \
            --debug
